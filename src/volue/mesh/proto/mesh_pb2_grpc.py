# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from volue.mesh.proto import mesh_pb2 as volue_dot_mesh_dot_proto_dot_mesh__pb2


class MeshServiceStub(object):
    """Mesh server service
    -------------------------------
    The Mesh service is an API for interacting with a running Mesh server, also called just Mesh.


    Authentication

    When Mesh is configured to require authentication an access token is
    necessary for most calls. You can acquire an access token through Kerberos
    authentication as described above the `AuthenticateKerberos` method. Access
    tokens are passed in the `Authorization` metadata field of each RPC with the
    format `Bearer <access token>`.

    Many gRPC libraries provide call credential types that correctly pass the
    access token to the server, for example `grpc::AccessTokenCredentials` in C++.
    These mechanisms will generally take the bare access token (without `Bearer`),
    and create the `Bearer <access token>` string internally.

    Access tokens expire after an hour and should be refreshed before then.
    Getting a new token early, for example after half the expiration time, is
    recommended.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/GetVersion',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.VersionInfo.FromString,
                )
        self.AuthenticateKerberos = channel.stream_stream(
                '/volue.mesh.v1alpha.MeshService/AuthenticateKerberos',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.AuthenticateKerberosResponse.FromString,
                )
        self.RevokeAccessToken = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/RevokeAccessToken',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetUserIdentity = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/GetUserIdentity',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.UserIdentity.FromString,
                )
        self.StartSession = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/StartSession',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.FromString,
                )
        self.EndSession = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/EndSession',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Commit = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/Commit',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Rollback = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/Rollback',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ImportTimeseries = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/ImportTimeseries',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportTimeseriesRequest.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportResponse.FromString,
                )
        self.ExportTimeseries = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/ExportTimeseries',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportTimeseriesRequest.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportTimeseriesResponse.FromString,
                )
        self.ImportAvailabilityEvents = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/ImportAvailabilityEvents',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportAvailabilityEventsRequest.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportResponse.FromString,
                )
        self.ExportAvailabilityEvents = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/ExportAvailabilityEvents',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportAvailabilityEventsRequest.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportAvailabilityEventsResponse.FromString,
                )
        self.ReadTimeseries = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/ReadTimeseries',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ReadTimeseriesRequest.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ReadTimeseriesResponse.FromString,
                )
        self.WriteTimeseries = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/WriteTimeseries',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.WriteTimeseriesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetTimeseriesEntry = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/GetTimeseriesEntry',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.GetTimeseriesEntryRequest.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.TimeseriesEntry.FromString,
                )
        self.UpdateTimeseriesEntry = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/UpdateTimeseriesEntry',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.UpdateTimeseriesEntryRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetTimeseriesAttribute = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/GetTimeseriesAttribute',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.GetTimeseriesAttributeRequest.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.TimeseriesAttribute.FromString,
                )
        self.UpdateTimeseriesAttribute = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/UpdateTimeseriesAttribute',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.UpdateTimeseriesAttributeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SearchTimeseriesAttributes = channel.unary_stream(
                '/volue.mesh.v1alpha.MeshService/SearchTimeseriesAttributes',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.SearchTimeseriesAttributesRequest.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.TimeseriesAttribute.FromString,
                )
        self.RunCalculation = channel.unary_unary(
                '/volue.mesh.v1alpha.MeshService/RunCalculation',
                request_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.CalculationRequest.SerializeToString,
                response_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.CalculationResponse.FromString,
                )


class MeshServiceServicer(object):
    """Mesh server service
    -------------------------------
    The Mesh service is an API for interacting with a running Mesh server, also called just Mesh.


    Authentication

    When Mesh is configured to require authentication an access token is
    necessary for most calls. You can acquire an access token through Kerberos
    authentication as described above the `AuthenticateKerberos` method. Access
    tokens are passed in the `Authorization` metadata field of each RPC with the
    format `Bearer <access token>`.

    Many gRPC libraries provide call credential types that correctly pass the
    access token to the server, for example `grpc::AccessTokenCredentials` in C++.
    These mechanisms will generally take the bare access token (without `Bearer`),
    and create the `Bearer <access token>` string internally.

    Access tokens expire after an hour and should be refreshed before then.
    Getting a new token early, for example after half the expiration time, is
    recommended.

    """

    def GetVersion(self, request, context):
        """Get the Mesh server version information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthenticateKerberos(self, request_iterator, context):
        """Authenticate using Kerberos
        -------------------------------
        Perform a potentially multi-leg Kerberos authentication where the client
        and the server sends Kerberos tickets back and forth until a complete
        security context is established or an error occurs.

        On success the final response from the server will contain a bearer token
        that should be used as a token in calls that require authorization, as
        well as the expiration time for that token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeAccessToken(self, request, context):
        """Revoke an access token received from `AuthenticateKerberos`, causing
        it to become immediately unusable. If the RPC returns without error
        the operation succeeded *or* the token does not exist.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserIdentity(self, request, context):
        """Returns the identity that was used to create the access token authorizing
        this call.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartSession(self, request, context):
        """Sessions
        -------------------------------
        To work with data inside a Mesh server you need to create a workspace which
        is called a session. Here you can have changes and calculations pending which
        won't be visible to other users of the Mesh server until you commit them.


        Start a Mesh session on the server, return the id of the session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndSession(self, request, context):
        """Close a session on the Mesh server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Commit(self, request, context):
        """Commit changes in a server session to permanent storage.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rollback(self, request, context):
        """Rollback changes that are in the server's session but not in the database yet.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportTimeseries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportTimeseries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportAvailabilityEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportAvailabilityEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadTimeseries(self, request, context):
        """Timeseries
        -------------------------------
        In its simplest form a timeseries is just a table of timestamps, flags and values.
        Timeseries can be organized and generated in different ways.
        Some timeseries are retrieved 'as is' from the database where they are stored, while others
        are generated using calculations which can be based on an arbitrary set of data.
        Timeseries can be organized in a structure which resembles catalogs and thus can have a
        path associated with it. They can also potentially be linked to a node in a Mesh model and with
        that get a path that represents the nodes position in the Mesh model. More meta data like unit
        of measurement, curve type and so on can also be linked to the timeseries.

        Get a series of timestamps, flags and values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteTimeseries(self, request, context):
        """Write a series of timestamps, flags and values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeseriesEntry(self, request, context):
        """Search for a timeseries entry
        NOT IMPLEMENTED
        rpc SearchTimeseriesEntity(SearchTimeseriesEntryRequest) returns (Timeseries) {}

        Other timeseries might not be connected to a mesh model at all, but instead be organized
        in some sort of catalog structure.
        This kind of metadata is called entry data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTimeseriesEntry(self, request, context):
        """Update timeseries entry meta data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeseriesAttribute(self, request, context):
        """Search for entry meta data connected to a timeseries
        NOT IMPLEMENTED
        rpc SearchTimeseriesEntries(SearchTimeseriesEntriesRequest) returns (stream TimeseriesEntry) {}

        When a timeseries, either calculated or not, is linked to a node in a Mesh model,
        some meta data associated with the Mesh model node can be retrieved.
        This kind of metadata is called attribute data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTimeseriesAttribute(self, request, context):
        """Update timeseries attribute meta data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTimeseriesAttributes(self, request, context):
        """Search for timeseries attributes in a given physical model

        The search uses Mesh's query language, which is the same language that's
        used in for example Nimbus.

        The result stream is not ordered in any particular way, and the caller
        should not expect the ordering of search results to be stable.

        Returns an error if:

        - the session doesn't exist,
        - the model doesn't exist,
        - the start object doesn't exist, or
        - the search query is invalid.

        If the search doesn't find any results an empty stream and an OK status
        is returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunCalculation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MeshServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.VersionInfo.SerializeToString,
            ),
            'AuthenticateKerberos': grpc.stream_stream_rpc_method_handler(
                    servicer.AuthenticateKerberos,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.AuthenticateKerberosResponse.SerializeToString,
            ),
            'RevokeAccessToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeAccessToken,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetUserIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserIdentity,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.UserIdentity.SerializeToString,
            ),
            'StartSession': grpc.unary_unary_rpc_method_handler(
                    servicer.StartSession,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.SerializeToString,
            ),
            'EndSession': grpc.unary_unary_rpc_method_handler(
                    servicer.EndSession,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Commit': grpc.unary_unary_rpc_method_handler(
                    servicer.Commit,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Rollback': grpc.unary_unary_rpc_method_handler(
                    servicer.Rollback,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ImportTimeseries': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportTimeseries,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportTimeseriesRequest.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportResponse.SerializeToString,
            ),
            'ExportTimeseries': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportTimeseries,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportTimeseriesRequest.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportTimeseriesResponse.SerializeToString,
            ),
            'ImportAvailabilityEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportAvailabilityEvents,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportAvailabilityEventsRequest.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportResponse.SerializeToString,
            ),
            'ExportAvailabilityEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportAvailabilityEvents,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportAvailabilityEventsRequest.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportAvailabilityEventsResponse.SerializeToString,
            ),
            'ReadTimeseries': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadTimeseries,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ReadTimeseriesRequest.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.ReadTimeseriesResponse.SerializeToString,
            ),
            'WriteTimeseries': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteTimeseries,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.WriteTimeseriesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetTimeseriesEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeseriesEntry,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.GetTimeseriesEntryRequest.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.TimeseriesEntry.SerializeToString,
            ),
            'UpdateTimeseriesEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTimeseriesEntry,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.UpdateTimeseriesEntryRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetTimeseriesAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeseriesAttribute,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.GetTimeseriesAttributeRequest.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.TimeseriesAttribute.SerializeToString,
            ),
            'UpdateTimeseriesAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTimeseriesAttribute,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.UpdateTimeseriesAttributeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SearchTimeseriesAttributes': grpc.unary_stream_rpc_method_handler(
                    servicer.SearchTimeseriesAttributes,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.SearchTimeseriesAttributesRequest.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.TimeseriesAttribute.SerializeToString,
            ),
            'RunCalculation': grpc.unary_unary_rpc_method_handler(
                    servicer.RunCalculation,
                    request_deserializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.CalculationRequest.FromString,
                    response_serializer=volue_dot_mesh_dot_proto_dot_mesh__pb2.CalculationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'volue.mesh.v1alpha.MeshService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MeshService(object):
    """Mesh server service
    -------------------------------
    The Mesh service is an API for interacting with a running Mesh server, also called just Mesh.


    Authentication

    When Mesh is configured to require authentication an access token is
    necessary for most calls. You can acquire an access token through Kerberos
    authentication as described above the `AuthenticateKerberos` method. Access
    tokens are passed in the `Authorization` metadata field of each RPC with the
    format `Bearer <access token>`.

    Many gRPC libraries provide call credential types that correctly pass the
    access token to the server, for example `grpc::AccessTokenCredentials` in C++.
    These mechanisms will generally take the bare access token (without `Bearer`),
    and create the `Bearer <access token>` string internally.

    Access tokens expire after an hour and should be refreshed before then.
    Getting a new token early, for example after half the expiration time, is
    recommended.

    """

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/GetVersion',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.VersionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthenticateKerberos(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/volue.mesh.v1alpha.MeshService/AuthenticateKerberos',
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.AuthenticateKerberosResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeAccessToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/RevokeAccessToken',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/GetUserIdentity',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.UserIdentity.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/StartSession',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/EndSession',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Commit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/Commit',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rollback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/Rollback',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.Guid.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportTimeseries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/ImportTimeseries',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportTimeseriesRequest.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportTimeseries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/ExportTimeseries',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportTimeseriesRequest.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportTimeseriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportAvailabilityEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/ImportAvailabilityEvents',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportAvailabilityEventsRequest.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportAvailabilityEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/ExportAvailabilityEvents',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportAvailabilityEventsRequest.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ExportAvailabilityEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadTimeseries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/ReadTimeseries',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ReadTimeseriesRequest.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.ReadTimeseriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteTimeseries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/WriteTimeseries',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.WriteTimeseriesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeseriesEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/GetTimeseriesEntry',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.GetTimeseriesEntryRequest.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.TimeseriesEntry.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTimeseriesEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/UpdateTimeseriesEntry',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.UpdateTimeseriesEntryRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeseriesAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/GetTimeseriesAttribute',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.GetTimeseriesAttributeRequest.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.TimeseriesAttribute.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTimeseriesAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/UpdateTimeseriesAttribute',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.UpdateTimeseriesAttributeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchTimeseriesAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/volue.mesh.v1alpha.MeshService/SearchTimeseriesAttributes',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.SearchTimeseriesAttributesRequest.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.TimeseriesAttribute.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunCalculation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/volue.mesh.v1alpha.MeshService/RunCalculation',
            volue_dot_mesh_dot_proto_dot_mesh__pb2.CalculationRequest.SerializeToString,
            volue_dot_mesh_dot_proto_dot_mesh__pb2.CalculationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
