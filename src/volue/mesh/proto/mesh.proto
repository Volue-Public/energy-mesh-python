syntax = "proto3";

import "google/protobuf/empty.proto";

package volue.mesh.protobuf;

// The greeting service definition.
service MeshService {
  rpc GetVersion(google.protobuf.Empty) returns (VersionInfo) {}

  // Read timeseries points with timskey
  rpc GetTimeseriesPoints(GetTimeseriesPointsRequest) returns (GetTimeseriesPointsReply) {}  
  
  // TODO: All the rpcs below should probably have their own Request/Reply messages
  // Edit (write) timeseries points with timskey
  rpc EditTimeseriesPoints(EditTimeseriesPointsRequest) returns (StatusReply) {}  

  // Start a Mesh session, return the id of the session
  rpc StartSession(google.protobuf.Empty) returns (StartSessionReply) {}

  rpc EndSession(Guid) returns (StatusReply) {}
  rpc Commit(Guid) returns (StatusReply) {}
  rpc Rollback(Guid) returns (StatusReply) {}
}

message Status{
  enum StatusCode {
	OK = 0;
	INVALID_INPUT = 1;
	SESSION_NOT_FOUND = 2;
	OBJECT_NOT_FOUND = 3;
	NOT_SUPPORTED = 4;
	UNKNOWN_ERROR = 999;
  }
  StatusCode status_code = 1;
  string error_text = 2;
}

message Guid {
  // Bytes in LITTLE ENDIAN format
  bytes bytes_le = 1;
}

message UtcInterval {
  uint64 start_time = 1;
  uint64 end_time = 2;
}

// Contains one of three ways to uniquely identify a Timeseries
message TimeseriesId {
  oneof id {
    int64 timskey = 1;
    Guid entry_id = 2;
    string search_string = 3;
  }
}

message TimeseriesPoint {
	uint64 timestamp = 1;
	double value = 2;
	uint32 flags = 3;
}

message TimeseriesSegment {
	repeated TimeseriesPoint points = 1;
}

message VersionInfo {
  Status status = 1;
  string version = 2;
  string name = 3;
  string build_date = 4;
  string commit = 5;
  string full_version = 6;
}

message GetTimeseriesPointsRequest {
  Guid session_id = 1;
  TimeseriesId timeseries_id = 2;
  UtcInterval interval = 3;
}

message GetTimeseriesPointsReply {
  Status status = 1;
  TimeseriesId timeseries_id = 2;
  repeated TimeseriesSegment segments = 3;
}

message EditTimeseriesPointsRequest {
  Guid session_id = 1;
  TimeseriesId timeseries_id = 2;
  TimeseriesSegment segment = 3;
  UtcInterval interval = 4;
}

message StatusReply {
  Status status = 1;
}

message StartSessionReply {
  Status status = 1;
  Guid session_id = 2;
}

