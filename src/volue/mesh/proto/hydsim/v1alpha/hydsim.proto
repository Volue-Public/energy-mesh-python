syntax = "proto3";

package volue.mesh.grpc.hydsim.v1alpha;

import "volue/mesh/proto/type/resources.proto";

// Experimental HydSim API, very unstable.
service HydsimService {
  // Run a hydro simulation using HydSim on the Mesh server.
  rpc RunHydroSimulation(RunHydroSimulationRequest) returns (stream LogOrDataset) {}

  // Run an inflow calculation using HydSim on the Mesh server.
  rpc RunInflowCalculation(RunInflowCalculationRequest) returns (stream LogOrDataset) {}

  // Generate an input file for Marginal Cost from an optimisation case using
  // HydSim.
  //
  // The return stream will include all the log messages from generating the
  // file, and then end with the JSON contents of the file.
  rpc GetMcFile(GetMcFileRequest) returns (stream GetMcFileResponse) {}
}

message RunHydroSimulationRequest {
  // The session to use, must be set to the ID of an active session.
  volue.mesh.grpc.type.Guid session_id = 1;
  volue.mesh.grpc.type.MeshId simulation = 2;
  volue.mesh.grpc.type.UtcInterval interval = 3;
  volue.mesh.grpc.type.Resolution resolution = 4;

  // The scenario to use. The default of zero runs all scenarios, -1 runs no
  // scenarios, and a number referring to an existing scenario runs that
  // scenario.
  int32 scenario = 5;

  // Generate and return HydSim datasets that can be used by Volue to diagnose
  // issues with hydro simulations. For performance reasons this should be
  // false when not trying to diagnose an issue.
  //
  // See the HydSimDataset message for more information.
  bool return_datasets = 6;
}

message RunInflowCalculationRequest {
  volue.mesh.grpc.type.Guid session_id = 1;
  volue.mesh.grpc.type.MeshId watercourse = 2;
  volue.mesh.grpc.type.UtcInterval interval = 3;
  volue.mesh.grpc.type.Resolution resolution = 4;

  // Generate and return HydSim datasets that can be used by Volue to diagnose
  // issues with inflow calculations. For performance reasons this should be
  // false when not trying to diagnose an issue.
  //
  // See the HydSimDataset message for more information.
  bool return_datasets = 5;
}

message GetMcFileRequest {
  volue.mesh.grpc.type.Guid session_id = 1;
  volue.mesh.grpc.type.MeshId optimisation_case = 2;
  volue.mesh.grpc.type.UtcInterval interval = 3;
}

message SimulationLog {
  volue.mesh.grpc.type.LogLevel level = 1;
  string message = 2;
}

// A HydSim dataset is a representation of data used in a hydro simulation or
// inflow calculation. The HydSim team may use a dataset to diagnose issues.
// When Volue requests a dataset we recommend storing datasets with filename
// `name` and contents from `data` and then sending those files to Volue
message HydSimDataset {
  string name = 1;
  bytes data = 2;
}

message LogOrDataset {
  oneof response_oneof {
    SimulationLog log_message = 1;
    HydSimDataset dataset = 2;
  }
}

message GetMcFileResponse {
  oneof response_oneof {
    SimulationLog log_message = 1;
    string mc_file = 2;
  }
}
