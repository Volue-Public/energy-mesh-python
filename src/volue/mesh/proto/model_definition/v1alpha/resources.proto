syntax = "proto3";

package volue.mesh.grpc.model_definition.v1alpha;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

import "volue/mesh/proto/type/resources.proto";


message AttributeType {
  volue.mesh.grpc.type.Guid id = 1;
  string path = 2;
  string name = 3;
  string description = 4;

  // The owner of an attribute type is either a namespace or a model definition.
  volue.mesh.grpc.type.MeshId owner_id = 5;

  repeated Tag tags = 6;

  // If an attribute type has more than one namespace,
  // they are concatenated with dots '.', e.g.:
  //   namespace1.namespace2
  string name_space = 7;
  AttributeValueType value_type = 8;

  // For integer, double and time series attribute types.
  optional UnitOfMeasurement unit_of_measurement = 9;
  // For relation attributes types.
  optional volue.mesh.grpc.type.MeshId target_object_definition_id = 10;
  // For integer, double, bool, string, UTC time, XY set attribute types.
  optional string expression = 11;
}

enum AttributeValueType {
  ATTRIBUTE_VALUE_TYPE_UNSPECIFIED = 0;
  ATTRIBUTE_VALUE_TYPE_INT = 1;
  ATTRIBUTE_VALUE_TYPE_DOUBLE = 2;
  ATTRIBUTE_VALUE_TYPE_BOOL = 3;
  ATTRIBUTE_VALUE_TYPE_STRING = 4;
  ATTRIBUTE_VALUE_TYPE_UTC_TIME = 5;
  ATTRIBUTE_VALUE_TYPE_TIMESERIES = 6;
  ATTRIBUTE_VALUE_TYPE_OWNERSHIP_RELATION = 7;
  ATTRIBUTE_VALUE_TYPE_LINK_RELATION = 8;
  ATTRIBUTE_VALUE_TYPE_VERSIONED_LINK_RELATION = 9;
  ATTRIBUTE_VALUE_TYPE_RATING_CURVE = 10;
  ATTRIBUTE_VALUE_TYPE_XY_SET = 11;
}

message AttributeDefinition {
  volue.mesh.grpc.type.Guid id = 1;
  string path = 2;
  string name = 3;

  string description = 4;
  // Tags are inherited from the attribute type.
  repeated Tag tags = 5;

  // If an attribute definition has more than one namespace,
  // they are concatenated with dots '.', e.g.:
  //   namespace1.namespace2
  string name_space = 6;
  string type_name = 7;

  // Specifies minimum and maximum size of a collection of attributes.
  // Minimum and maximum cardinality applies only to a collection of attributes
  // e.g.: collection of double attributes
  // For singular types both minimum and maximum cardinality is set to 1.
  int64 minimum_cardinality = 8;
  int64 maximum_cardinality = 9;

  // For reading operations with field mask specifying what parts of
  // `AttributeDefinition` to include in the response message, the user needs
  // to specify `definition` for the below `oneof` field.
  oneof definition_type_oneof {
    Int64AttributeDefinition int_definition = 10;
    DoubleAttributeDefinition double_definition = 11;
    BooleanAttributeDefinition boolean_definition = 12;
    StringAttributeDefinition string_definition = 13;
    UtcTimeAttributeDefinition utc_time_definition = 14;

    TimeseriesAttributeDefinition timeseries_definition = 15;
    XySetsAttributeDefinition xy_table_definition = 16;
    OwnershipRelationAttributeDefinition ownership_relation_definition = 17;
    // Applicable to all types of link relations.
    LinkRelationAttributeDefinition link_relation_definition = 18;
    RatingCurveAttributeDefinition rating_curve_definition = 19;
  }

  volue.mesh.grpc.type.MeshId attribute_type_id = 1000;
  // The owner of an attribute definition is an object definition.
  volue.mesh.grpc.type.MeshId owner_id = 1001;
}

message Int64AttributeDefinition {
  int64 default_value = 1;
  int64 minimum_value = 2;
  int64 maximum_value = 3;
  volue.mesh.grpc.model_definition.v1alpha.UnitOfMeasurement unit_of_measurement = 4;
}

message DoubleAttributeDefinition {
  double default_value = 1;
  double minimum_value = 2;
  double maximum_value = 3;
  volue.mesh.grpc.model_definition.v1alpha.UnitOfMeasurement unit_of_measurement = 4;
}

message BooleanAttributeDefinition {
  bool default_value = 1;
}

message StringAttributeDefinition {
  string default_value = 1;
}

message UtcTimeAttributeDefinition {
  string default_value = 1;
  string minimum_value = 2;
  string maximum_value = 3;
}

message TimeseriesAttributeDefinition {
  string template_expression = 1;
  volue.mesh.grpc.model_definition.v1alpha.UnitOfMeasurement unit_of_measurement = 2;
}

// Describes an axis in a `XySet`.
message XySetAxis {
  string description = 1;
  UnitOfMeasurement unit_of_measurement = 2;
}

message XySetsAttributeDefinition {
  // XYSetAttribute if not versioned. XYZSeriesAttribute if versioned.
  bool versioned = 1;

  XySetAxis x_axis = 2;
  XySetAxis y_axis = 3;

  // Reference values/z values, if applicable.
  optional XySetAxis z_axis = 4;
}

message OwnershipRelationAttributeDefinition {
  string target_object_type_name = 1;
  volue.mesh.grpc.type.MeshId target_object_definition_id = 2;
}

message LinkRelationAttributeDefinition {
  string target_object_type_name = 1;
  volue.mesh.grpc.type.MeshId target_object_definition_id = 2;
}

message RatingCurveAttributeDefinition {
  // Currently protobuf rating curve attribute definition message is empty.
  // Message is created to be easily extendable in the future if needed.
}

message AttributeDefinitionDefaultValue {
  oneof value_oneof {
    int64 int_value = 1;
    double double_value = 2;
    bool boolean_value = 3;
    string string_value = 4;
    google.protobuf.Timestamp utc_time_value = 5;
  }
}

message AttributeDefinitionThresholdValue {
  oneof value_oneof {
    int64 int_value = 1;
    double double_value = 2;
    google.protobuf.Timestamp utc_time_value = 3;
  }
}

message ObjectDefinition {
  volue.mesh.grpc.type.Guid id = 1;
  string path = 2;
  string name = 3;
  string description = 4;

  // The owner of an object definition is either a namespace or a model definition.
  volue.mesh.grpc.type.MeshId owner_id = 5;

  repeated Tag tags = 6;
  // If an object definition has more than one namespace,
  // they are concatenated with dots '.', e.g.:
  //   namespace1.namespace2
  string name_space = 7;

  // Number of `Object`s, i.e.: instances of the given `ObjectDefinition`.
  int32 instance_count = 8;

  repeated AttributeDefinition attribute_definitions = 9;
}

message Namespace {
  message Child {
    oneof child_id_oneof {
      volue.mesh.grpc.type.MeshId name_space_id = 1;
      volue.mesh.grpc.type.MeshId object_definition_id = 2;
      volue.mesh.grpc.type.MeshId attribute_type_id = 3;
    }
  }

  volue.mesh.grpc.type.Guid id = 1;
  string path = 2;
  string name = 3;
  string description = 4;

  // The owner of a namespace is either another namespace or a model definition.
  // Model definition does not have an owner.
  volue.mesh.grpc.type.MeshId owner_id = 5;

  // [OUTPUT_ONLY]
  bool is_model_definition = 6;

  repeated Child children = 7;
}

message Tag {
  volue.mesh.grpc.type.Guid id = 1;
  string name = 2;
  string description = 3;
}

message TagUsage {
  oneof usage_oneof {
    AttributeType attribute_type = 1;
    ObjectDefinition object_definition = 2;
  }
}

message UnitOfMeasurement {
  volue.mesh.grpc.type.Guid id = 1;
  string name = 2;
}

// Additional, optional information that can be set on attribute definitions,
// object definitions and namespaces.
//
// Extended metadata is a pair: category name and a JSON object (expressed in
// protobuf as `google.protobuf.Struct`).
//
// JSON object when serialized to string cannot exceed 4000 characters.
//
// If a given attribute definition, object definition or namespace has more
// than one extended metadata, then the category names must be unique.
//
// For example: when trying to set the following array of extended metadata for
// some namespace, it would be discarded and an error would be returned:
//   <category_1, metadata_body_1>
//   <category_2, metadata_body_2>
//   <category_1, metadata_body_3>  <- there is already a `category_1`
message ExtendedMetadata {
  string category = 1;
  google.protobuf.Struct metadata = 2;
}
